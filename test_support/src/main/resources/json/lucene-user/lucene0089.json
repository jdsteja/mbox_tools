{
    "author" : "mark harwood <markharw00d@yahoo.co.uk>",
    "to" : [ "java-user@lucene.apache.org" ],
    "subject_original" : "Re: SpanQueries in Luke",
    "subject" : "SpanQueries in Luke",
    "date" : "2010-03-05T11:26:37.000Z",
    "message_id_original" : "<303371.91922.qm@web24709.mail.ird.yahoo.com>",
    "message_id" : "<303371.91922.qm@web24709.mail.ird.yahoo.com>",
    "references" : [ "<644844.24067.qm@web50308.mail.re2.yahoo.com>", "<4B8FFE67.7040906@getopt.org>", "<225693.6795.qm@web24713.mail.ird.yahoo.com>", "<4B90D6EB.6060501@getopt.org>", "<214261.6081.qm@web24707.mail.ird.yahoo.com>", "<4B90E6D0.6080903@getopt.org>" ],
    "in_reply_to" : "<4B90E6D0.6080903@getopt.org>",
    "message_snippet" : "start experimenting with this in Luke, to see whether we can squeeze a subset of Solr schema there. Actually, an \"AnalyzerFactory\" interface in Luke might provide the abstraction which would allow Solr, my proprietary metadata system, and any other c",
    "first_text_message" : ">>The lack of standardized metadata is an issue, of course - we could\nstart experimenting with this in Luke, to see whether we can squeeze a\nsubset of Solr schema there.\n\nActually, an \"AnalyzerFactory\" interface in Luke might provide the abstraction which would allow Solr, my proprietary metadata system, and any other config resource to hook into Luke.\nThat would be pretty cool\n\n\n\n----- Original Message ----\nFrom: Andrzej Bialecki <ab@getopt.org>\nTo: java-user@lucene.apache.org\nSent: Fri, 5 March, 2010 11:11:12\nSubject: Re: SpanQueries in Luke\n\nOn 2010-03-05 11:22, mark harwood wrote:\n>>> I'll commit the current mostly-working state today, you can take a look\n>\n> OK. However I think this XMLQueryParser addition will only resurface a long-standing issue with Luke and Lucene in general.\n> This query parser works best on multiple fields (e.g. free-text<UserQuery>  tags and<TermsFilter>  on structured fields). Each field typically requires different analyzers and there is currently no way of recording this information as metadata alongside an index.\n> Without this metadata each user's Luke session starts with a game of \"guess-which-analyzer-to-use?\"\n\nI guess ;) that generally speaking there is no good answer to this - the same token stream could have been produced by varying analysis chains, even across indexing sessions that append to the same index.\n\n>\n> I use my own proprietary system for storing such index metadata and this is through an XML file that contains a BeanEncoder-serialized PerFieldAnalyserWrapper among other things.\n> It would be nice to see some standardisation in how this information can be made available in *any* Lucene index but I guess this overlaps with things like Solr's config.\n\nYes.\n\nTheoretically one could store such information in IndexCommit.getUserData(). The lack of standardized metadata is an issue, of course - we could start experimenting with this in Luke, to see whether we can squeeze a subset of Solr schema there.\n\n-- Best regards,\nAndrzej Bialecki     <><\n___. ___ ___ ___ _ _   __________________________________\n[__ || __|__/|__||\\/|  Information Retrieval, Semantic Web\n___|||__||  \\|  ||  |  Embedded Unix, System Integration\nhttp://www.sigram.com  Contact: info at sigram dot com\n\n\n---------------------------------------------------------------------\nTo unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org\nFor additional commands, e-mail: java-user-help@lucene.apache.org\n\n\n\r\n\r\n\r\n---------------------------------------------------------------------\r\nTo unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org\r\nFor additional commands, e-mail: java-user-help@lucene.apache.org\r\n\r\n\r\n",
    "first_text_message_without_quotes" : "start experimenting with this in Luke, to see whether we can squeeze a subset of Solr schema there. Actually, an \"AnalyzerFactory\" interface in Luke might provide the abstraction which would allow Solr, my proprietary metadata system, and any other config resource to hook into Luke. That would be pretty cool ----- Original Message ---- From: Andrzej Bialecki <ab@getopt.org> To: java-user@lucene.apache.org Sent: Fri, 5 March, 2010 11:11:12 Subject: Re: SpanQueries in Luke On 2010-03-05 11:22, mark harwood wrote: I guess ;) that generally speaking there is no good answer to this - the same token stream could have been produced by varying analysis chains, even across indexing sessions that append to the same index. Yes. Theoretically one could store such information in IndexCommit.getUserData(). The lack of standardized metadata is an issue, of course - we could start experimenting with this in Luke, to see whether we can squeeze a subset of Solr schema there. -- Best regards, Andrzej Bialecki     <>< ___. ___ ___ ___ _ _   __________________________________ [__ || __|__/|__||\\/|  Information Retrieval, Semantic Web ___|||__||  \\|  ||  |  Embedded Unix, System Integration http://www.sigram.com  Contact: info at sigram dot com --------------------------------------------------------------------- To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org For additional commands, e-mail: java-user-help@lucene.apache.org --------------------------------------------------------------------- To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org For additional commands, e-mail: java-user-help@lucene.apache.org",
    "text_messages_cnt" : 0,
    "html_messages_cnt" : 0,
    "message_attachments_cnt" : 0
}