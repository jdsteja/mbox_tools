{
    "author_name" : "mark harwood",
    "author_email" : "markharw00d@yahoo.co.uk",
    "to" : [ "java-user@lucene.apache.org" ],
    "subject_original" : "Re: SpanQueries in Luke",
    "subject" : "SpanQueries in Luke",
    "date" : "2010-03-05T10:22:36.000Z",
    "message_id_original" : "<214261.6081.qm@web24707.mail.ird.yahoo.com>",
    "message_id" : "<214261.6081.qm@web24707.mail.ird.yahoo.com>",
    "references" : [ "<644844.24067.qm@web50308.mail.re2.yahoo.com>", "<4B8FFE67.7040906@getopt.org>", "<225693.6795.qm@web24713.mail.ird.yahoo.com>", "<4B90D6EB.6060501@getopt.org>" ],
    "in_reply_to" : "<4B90D6EB.6060501@getopt.org>",
    "message_snippet" : "OK. However I think this XMLQueryParser addition will only resurface a long-standing issue with Luke and Lucene in general. This query parser works best on multiple fields (e.g. free-text <UserQuery> tags and <TermsFilter> on structured fields). Each",
    "first_text_message" : ">>I'll commit the current mostly-working state today, you can take a look\n\nOK. However I think this XMLQueryParser addition will only resurface a long-standing issue with Luke and Lucene in general.\nThis query parser works best on multiple fields (e.g. free-text <UserQuery> tags and <TermsFilter> on structured fields). Each field typically requires different analyzers and there is currently no way of recording this information as metadata alongside an index.\nWithout this metadata each user's Luke session starts with a game of \"guess-which-analyzer-to-use?\"\n\nI use my own proprietary system for storing such index metadata and this is through an XML file that contains a BeanEncoder-serialized PerFieldAnalyserWrapper among other things.\nIt would be nice to see some standardisation in how this information can be made available in *any* Lucene index but I guess this overlaps with things like Solr's config.\n\n\nCheers,\nMark\n\n\n\n----- Original Message ----\nFrom: Andrzej Bialecki <ab@getopt.org>\nTo: java-user@lucene.apache.org\nSent: Fri, 5 March, 2010 10:03:23\nSubject: Re: SpanQueries in Luke\n\nOn 2010-03-05 10:47, mark harwood wrote:\n>\n>\n>>> No, this simply means that you will be able to use the xml-query-parser instead of the regular one\n>\n> Not sure exactly what you have in mind for an editor, Andrzej but there is an opportunity to do something smart here for little effort.\n> The XMLQueryParser comes with a DTD which means you can have an editor that auto-completes/suggests legal query syntax. Any schema-driven editing widget for XML could be used e.g. http://www.felixgolubov.com/XMLEditor/ or http://gendiapo.sourceforge.net/dev/\n>\n> If none of these are any good another startpoint may be to use DTDdoc to parse the schema. The DTD includes a lot of help-text comments which are used by the DTDdoc to generate HTML documentation so using this tool gives you schema *and* help text.\n\nI didn't have any editor in mind, I used a lo-tek solution of copy&paste\nto the query textarea.\n\nI'll commit the current mostly-working state today, you can take a look\n- you've written some cool Luke plugins before .. ;)\n\n\n--\nBest regards,\nAndrzej Bialecki     <><\n  ___. ___ ___ ___ _ _   __________________________________\n[__ || __|__/|__||\\/|  Information Retrieval, Semantic Web\n___|||__||  \\|  ||  |  Embedded Unix, System Integration\nhttp://www.sigram.com  Contact: info at sigram dot com\n\n\n---------------------------------------------------------------------\nTo unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org\nFor additional commands, e-mail: java-user-help@lucene.apache.org\n\n\n\r\n\r\n\r\n---------------------------------------------------------------------\r\nTo unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org\r\nFor additional commands, e-mail: java-user-help@lucene.apache.org\r\n\r\n\r\n",
    "first_text_message_without_quotes" : "OK. However I think this XMLQueryParser addition will only resurface a long-standing issue with Luke and Lucene in general. This query parser works best on multiple fields (e.g. free-text <UserQuery> tags and <TermsFilter> on structured fields). Each field typically requires different analyzers and there is currently no way of recording this information as metadata alongside an index. Without this metadata each user's Luke session starts with a game of \"guess-which-analyzer-to-use?\" I use my own proprietary system for storing such index metadata and this is through an XML file that contains a BeanEncoder-serialized PerFieldAnalyserWrapper among other things. It would be nice to see some standardisation in how this information can be made available in *any* Lucene index but I guess this overlaps with things like Solr's config. Cheers, Mark ----- Original Message ---- From: Andrzej Bialecki <ab@getopt.org> To: java-user@lucene.apache.org Sent: Fri, 5 March, 2010 10:03:23 Subject: Re: SpanQueries in Luke On 2010-03-05 10:47, mark harwood wrote: I didn't have any editor in mind, I used a lo-tek solution of copy&paste to the query textarea. I'll commit the current mostly-working state today, you can take a look - you've written some cool Luke plugins before .. ;) -- Best regards, Andrzej Bialecki     <>< ___. ___ ___ ___ _ _   __________________________________ [__ || __|__/|__||\\/|  Information Retrieval, Semantic Web ___|||__||  \\|  ||  |  Embedded Unix, System Integration http://www.sigram.com  Contact: info at sigram dot com --------------------------------------------------------------------- To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org For additional commands, e-mail: java-user-help@lucene.apache.org --------------------------------------------------------------------- To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org For additional commands, e-mail: java-user-help@lucene.apache.org",
    "text_messages_cnt" : 0,
    "html_messages_cnt" : 0,
    "message_attachments_cnt" : 0
}